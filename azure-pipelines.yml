trigger:
  branches:
    include:
      - main  # Corrección del trigger

pool:
  name: Default  # O el nombre del pool donde registraste el agente
  demands:
    - Agent.OS -equals Windows  # Asegura que el agente sea Windows

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Instalar Node.js'

  - script: |
      npm cache clean --force
      npm install --legacy-peer-deps
    displayName: 'Instalar dependencias'

  - script: |
      IF NOT EXIST "node_modules" (
        echo ⚠️ node_modules no encontrado. Ejecutando npm install...
        npm install --legacy-peer-deps
      )
    displayName: 'Verificar e instalar dependencias'

  - script: |
      ng version
      ng build --configuration=production
    displayName: 'Construir aplicación Angular'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'dist'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
      replaceExistingArchive: true
    displayName: 'Comprimir archivos para despliegue'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/app.zip'
      artifactName: 'drop'
    displayName: 'Publicar artefactos'

  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'AzureConnection-ReactionSport'
      appName: 'reactionSport'
      package: '$(Build.ArtifactStagingDirectory)/app.zip'
      deploymentMethod: 'zipDeploy'
    displayName: 'Desplegar aplicación en Azure Web Apps'

  # Reiniciar la aplicación en Azure con Azure CLI usando PowerShell Core (pscore)
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureConnection-ReactionSport'
      scriptType: 'pscore'  # Usa PowerShell Core en Windows
      scriptLocation: 'inlineScript'
      inlineScript: |
        az webapp restart --name reactionSport --resource-group TuResourceGroup
    displayName: 'Reiniciar aplicación con Azure CLI'